trigger:
- master

variables:
  AZURE_SERVICE_CONNECTION: 'Azure-subscription'         # name of Service Connection
  DOCKER_CONNECTION: 'dockerhub_connection'              # Docker Registry service connection
  dockerHubUsername: 'ahad8'                             # Docker Hub username
  IMAGE_NAME: 'frontend'                                 # repo name on Docker Hub
  TAG: '$(Build.BuildId)'                                # image tag based on build ID

pool:
  vmImage: 'ubuntu-latest'

stages:
# === Stage: Build & Push Image to Docker Hub ===
- stage: Build
  displayName: 'Build & Test & Push Frontend Image'
  jobs:
  - job: Build
    displayName: 'Build'
    steps:
      - checkout: self

      - task: SonarQubePrepare@5
        displayName: 'Prepare SonarQube Analysis'
        inputs:
          SonarQube: 'sonarqube-f-connection'      # اسم Service Connection
          scannerMode: 'CLI'
          configMode: 'manual'
          cliProjectKey: 'Authentication-Frontend'
          cliProjectName: 'Authentication Frontend'
          extraProperties: |
            sonar.projectBaseDir=authentication_app_frontend.gr3
            sonar.sources=.

      - task: NodeTool@0
        displayName: 'Install Node.js'
        inputs:
          versionSpec: '18.x'

      - script: |
          cd authentication_app_frontend.gr3
          npm install
          npm run build
        displayName: 'Build Frontend'

      - task: SonarQubeAnalyze@5
        displayName: 'Run SonarQube Analysis'

      - task: SonarQubePublish@5
        displayName: 'Publish SonarQube Results'
        inputs:
          pollingTimeoutSec: '300'

      - task: Docker@2
        displayName: 'Login to Docker Hub'
        inputs:
          containerRegistry: '$(DOCKER_CONNECTION)'
          command: login

      - task: Docker@2
        displayName: 'Build & Push to Docker Hub'
        inputs:
          containerRegistry: '$(DOCKER_CONNECTION)'
          repository: '$(dockerHubUsername)/$(IMAGE_NAME)'
          command: buildAndPush
          dockerfile: 'authentication_app_frontend.gr3/Dockerfile'
          buildContext: 'authentication_app_frontend.gr3'
          tags: |
            $(TAG)
